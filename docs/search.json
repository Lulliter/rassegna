[
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "A glitch in the matrix",
    "section": "",
    "text": "Order By\nDefault\n\n          Title\n        \n\n          Date - Oldest\n        \n\n          Date - Newest\n        \n\n    \n      \n      \n\n\n\n\n\n\n\nRassegnina 9 sett 2023\n\n\n\n\n\n\n\nrassegna\n\n\nITA 🇮🇹\n\n\n\n\n1a rassegna della serie\n\n\n\n\n\n\n2023-09-07\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "til/rleid.html",
    "href": "til/rleid.html",
    "title": "data.table::rleid() is pretty cool!",
    "section": "",
    "text": "Longer example on QB Starts"
  },
  {
    "objectID": "til/rleid.html#create-a-dataframe",
    "href": "til/rleid.html#create-a-dataframe",
    "title": "data.table::rleid() is pretty cool!",
    "section": "Create a dataframe",
    "text": "Create a dataframe\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(magrittr)\n\n\nAttaching package: 'magrittr'\n\nThe following object is masked from 'package:purrr':\n\n    set_names\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:lubridate':\n\n    hour, isoweek, mday, minute, month, quarter, second, wday, week,\n    yday, year\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\n# create a df of\"streaks\" or repeats\nex_df &lt;- tibble(\n  x = c(\"a\", \"a\", rep(\"b\", 3), rep(\"a\", 5)),\n  num = 1:10\n) \n\n# print the data\nex_df\n\n# A tibble: 10 × 2\n   x       num\n   &lt;chr&gt; &lt;int&gt;\n 1 a         1\n 2 a         2\n 3 b         3\n 4 b         4\n 5 b         5\n 6 a         6\n 7 a         7\n 8 a         8\n 9 a         9\n10 a        10"
  },
  {
    "objectID": "til/rleid.html#example-of-rle-or-run-length-encoding",
    "href": "til/rleid.html#example-of-rle-or-run-length-encoding",
    "title": "data.table::rleid() is pretty cool!",
    "section": "Example of rle or run-length encoding",
    "text": "Example of rle or run-length encoding\n\n# rle or run-length encoding\n# summarizes a vector into the length of each repeat\n# and the value that is repeated\n# technically this is a form of recoverable data compression\n# IE you end up with fewer bytes but it tells you what a long vector\n# could be, and can be recreated\n\n# this can be read as the betters a, b, a\n# where the first a is repeated 2x\n# the b is repeated 3x\n# the next a is repeated 5x\nrle(ex_df$x)\n\nRun Length Encoding\n  lengths: int [1:3] 2 3 5\n  values : chr [1:3] \"a\" \"b\" \"a\""
  },
  {
    "objectID": "til/rleid.html#example-of-rleid",
    "href": "til/rleid.html#example-of-rleid",
    "title": "data.table::rleid() is pretty cool!",
    "section": "Example of rleid",
    "text": "Example of rleid\n\n# rleid() generates the ids or repeated group of equal length\n# to the original vector\n\nex_df$x\n\n [1] \"a\" \"a\" \"b\" \"b\" \"b\" \"a\" \"a\" \"a\" \"a\" \"a\"\n\ndata.table::rleid(ex_df$x)\n\n [1] 1 1 2 2 2 3 3 3 3 3\n\n\n\n# it can be used on a vector, in a dataframe, in a datatable or a tibble\n# note that it can be used within mutate() since it returns\n# a vector of equal length, ie the number of rows is not changed\nex_df %&gt;% \n  mutate(rleid = data.table::rleid(x))\n\n# A tibble: 10 × 3\n   x       num rleid\n   &lt;chr&gt; &lt;int&gt; &lt;int&gt;\n 1 a         1     1\n 2 a         2     1\n 3 b         3     2\n 4 b         4     2\n 5 b         5     2\n 6 a         6     3\n 7 a         7     3\n 8 a         8     3\n 9 a         9     3\n10 a        10     3"
  },
  {
    "objectID": "til/rleid.html#rle-is-a-summary-function",
    "href": "til/rleid.html#rle-is-a-summary-function",
    "title": "data.table::rleid() is pretty cool!",
    "section": "rle is a summary function",
    "text": "rle is a summary function\n\n# note that rle() is a _summary_ function, and generates fewer rows\nex_df %&gt;% \n  summarize(lengths = rle(x)$lengths,\n            values =rle(x)$values)\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n# A tibble: 3 × 2\n  lengths values\n    &lt;int&gt; &lt;chr&gt; \n1       2 a     \n2       3 b     \n3       5 a"
  },
  {
    "objectID": "til/rleid.html#recover-the-original-data",
    "href": "til/rleid.html#recover-the-original-data",
    "title": "data.table::rleid() is pretty cool!",
    "section": "Recover the original data",
    "text": "Recover the original data\n\n# we can create a summary\n# and then recover the original data\nfinal_df &lt;- ex_df %&gt;% \n  summarize(\n    lengths = rle(x)$lengths,\n    values =rle(x)$values\n    ) %T&gt;% print() %&gt;% \n  summarize(\n    x = rep(values, times=lengths),\n    num = 1:sum(lengths)\n    )\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n# A tibble: 3 × 2\n  lengths values\n    &lt;int&gt; &lt;chr&gt; \n1       2 a     \n2       3 b     \n3       5 a     \n\n\nWarning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\ndplyr 1.1.0.\nℹ Please use `reframe()` instead.\nℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n  always returns an ungrouped data frame and adjust accordingly.\n\n\n\nfinal_df\n\n# A tibble: 10 × 2\n   x       num\n   &lt;chr&gt; &lt;int&gt;\n 1 a         1\n 2 a         2\n 3 b         3\n 4 b         4\n 5 b         5\n 6 a         6\n 7 a         7\n 8 a         8\n 9 a         9\n10 a        10\n\n# original and recreation are identical\nall.equal(final_df, ex_df)\n\n[1] TRUE\n\n\n\n\n\n\n\n\nExpand for Session Info\n\n\n\n\n\n\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.2.2 (2022-10-31)\n os       macOS Big Sur ... 10.16\n system   x86_64, darwin17.0\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/Rome\n date     2023-09-07\n pandoc   3.1.1 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\n quarto   1.3.433 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n data.table  * 1.14.6  2022-11-16 [2] CRAN (R 4.2.0)\n dplyr       * 1.1.0   2023-01-29 [2] CRAN (R 4.2.0)\n forcats     * 1.0.0   2023-01-29 [1] CRAN (R 4.2.0)\n ggplot2     * 3.4.1   2023-02-10 [1] CRAN (R 4.2.0)\n lubridate   * 1.9.2   2023-02-10 [1] CRAN (R 4.2.0)\n magrittr    * 2.0.3   2022-03-30 [2] CRAN (R 4.2.0)\n purrr       * 1.0.1   2023-01-10 [2] CRAN (R 4.2.0)\n readr       * 2.1.4   2023-02-10 [1] CRAN (R 4.2.0)\n sessioninfo * 1.2.2   2021-12-06 [1] CRAN (R 4.2.0)\n stringr     * 1.5.0   2022-12-02 [2] CRAN (R 4.2.0)\n tibble      * 3.2.1   2023-03-20 [1] CRAN (R 4.2.0)\n tidyr       * 1.3.0   2023-01-24 [2] CRAN (R 4.2.0)\n tidyverse   * 2.0.0   2023-02-22 [1] CRAN (R 4.2.2)\n\n [1] /Users/luisamimmi/Library/R/x86_64/4.2/library\n [2] /Library/Frameworks/R.framework/Versions/4.2/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Mini-sito per rassegna stampa a cura di Luisa M. Mimmi",
    "section": "",
    "text": "spunti per sollevare lo sguardo dalla simulazione"
  },
  {
    "objectID": "posts/2023-09-07-rassegnina/index.html",
    "href": "posts/2023-09-07-rassegnina/index.html",
    "title": "Rassegnina 9 sett 2023",
    "section": "",
    "text": "Leggere\nxcvbcvb\n\n\nGuardare\ncxbcvxbvcxb\n\n\nRicordare\n\nBenedetto XVI “SANTA MESSA A CONCLUSIONE DELL’INCONTRO CON IL”RATZINGER SCHÜLERKREIS” - OMELIA DEL SANTO PADRE BENEDETTO XVI - Centro Mariapoli, Castel Gandolfo Domenica, 2 settembre 2012”"
  },
  {
    "objectID": "til.html",
    "href": "til.html",
    "title": "Things I’ve learned and want to remember",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\nTitle\n\n\n\n\n\n\n\n2022-11-27\n\n\ndata.table::rleid() is pretty cool!\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Luisa M. Mimmi",
    "section": "",
    "text": "Benvenuti!\nIl proposito di questo sito è raccogliere articoli, idee e spunti di riflessione critica su realtà e attualità: insomma fissare quelle sollecitazioni che fanno alzare la testa dalla “simulazione” in cui siamo spesso immersi…"
  },
  {
    "objectID": "ReadMe.html",
    "href": "ReadMe.html",
    "title": "README",
    "section": "",
    "text": "Resources\n\nAdding a blog to your existing Quarto website, by Sam Csik Rapp\nThe ultimate guide to starting a Quarto blog, by Albert Rapp"
  }
]